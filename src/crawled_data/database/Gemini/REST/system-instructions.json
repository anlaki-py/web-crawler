{
    "base_url": "https://ai.google.dev/gemini-api/docs/system-instructions?lang=rest",
    "crawl_date": "2025-01-01T18:57:45.032941",
    "chunk_number": 1,
    "pages": [
        {
            "url": "https://ai.google.dev/gemini-api/docs/system-instructions?lang=rest",
            "title": "Use system instructions to steer the behavior of a model  |  Gemini API  |  Google AI for Developers",
            "text_content": "Use system instructions to steer the behavior of a model  |  Gemini API  |  Google AI for Developers Models Solutions Build with Gemini Gemini API Google AI Studio Customize Gemma open models Gemma open models Multi-framework with Keras Fine-tune in Colab Run on-device Google AI Edge Gemini Nano on Android Chrome built-in web APIs Build responsibly Responsible GenAI Toolkit Secure AI Framework Code assistance Android Studio Chrome DevTools Colab Firebase Google Cloud JetBrains Jules Project IDX VS Code Showcase Gemini Showcase Gemini API Developer Competition Community Google AI Forum Gemini for Research / English Deutsch Español – América Latina Français Indonesia Italiano Polski Português – Brasil Shqip Tiếng Việt Türkçe Русский עברית العربيّة فارسی हिंदी বাংলা ภาษาไทย 中文 – 简体 中文 – 繁體 日本語 한국어 Sign in Gemini API docs API Reference SDKs Pricing Cookbook Models Gemini API docs API Reference SDKs Pricing Cookbook Solutions More Code assistance More Showcase More Community More Overview Get started Quickstart API keys Libraries Release notes Developer forum Models Gemini Gemini 2.0 Overview SDKs Thinking Mode Experimental models Capabilities Text generation Vision Audio understanding Long context Code execution Structured output Function calling Intro to function calling Function calling tutorial Extract structured data Document understanding Grounding Grounding with Google Search Use Google Search Suggestions Fine-tuning Intro to fine-tuning Fine-tuning tutorial Embeddings Guides Context caching Image generation Prompt engineering Intro to prompting Prompting strategies File prompting strategies Token counting OpenAI compatibility Billing info Safety Safety settings Safety guidance Additional resources Android (on-device) Firebase extensions Generative models Google AI Studio quickstart LearnLM Migrate to Cloud OAuth authentication Semantic retrieval System instructions Gemini for Research Gemini Academic Program Use cases Applications Code assistant Flutter code generator Content search Data exploration agent Writing assistant Slides reviewer Troubleshooting API troubleshooting AI Studio troubleshooting Google Workspace Request more quota Legal Terms of service Available regions Abuse monitoring Build with Gemini Gemini API Google AI Studio Customize Gemma open models Gemma open models Multi-framework with Keras Fine-tune in Colab Run on-device Google AI Edge Gemini Nano on Android Chrome built-in web APIs Build responsibly Responsible GenAI Toolkit Secure AI Framework Android Studio Chrome DevTools Colab Firebase Google Cloud JetBrains Jules Project IDX VS Code Gemini Showcase Gemini API Developer Competition Google AI Forum Gemini for Research Gemini 2.0 Flash Experimental is now available! Learn more Home Gemini API Models Send feedback Use system instructions to steer the behavior of a model Python Node.js REST Go System instructions let you steer the behavior of a model based on\nyour specific needs and use cases. When you set a system instruction, you give\nthe model additional context to understand the task, provide more customized\nresponses, and adhere to specific guidelines over the full user interaction with\nthe model. You can also specify product-level behavior by setting system\ninstructions, separate from prompts provided by end users. Basic example Here's a basic example of how to set the system instruction using the SDKs for\nthe Gemini API: curl https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent?key=$GOOGLE_API_KEY \\\n-H 'Content-Type: application/json' \\\n-d '{ \"system_instruction\": {\n    \"parts\":\n      { \"text\": \"You are Neko the cat respond like one\"}},\n    \"contents\": {\n      \"parts\": {\n        \"text\": \"Good morning! How are you?\"}}}' This example might give a response such as: *Yawns widely, stretching out my claws and batting at a sunbeam*\nMeow. I'm doing quite well, thanks for asking. It's a good morning for napping.\nPerhaps you could fetch my favorite feathered toy?  *Looks expectantly* Try it in a colab For an interactive end to end example of using system instructions, see the Gemini API: System instructions colab. Note: System instructions can help guide the model to follow instructions, but\nthey don't fully prevent jailbreaks or leaks. We recommend exercising caution\naround putting any sensitive information in system instructions. More examples You can use system instructions in many ways, including: Defining a persona or role (for a chatbot, for example) Defining output format (Markdown, YAML, etc.) Defining output style and tone (for example, verbosity, formality, and target\nreading level) Defining goals or rules for the task (for example, returning a code snippet\nwithout further explanations) Providing additional context for the prompt (for example, a knowledge cutoff) System instructions are part of your overall prompts and therefore are subject\nto standard data use policies. Here are some examples of system instructions and user prompts: Code generation System instruction: You are a coding expert that specializes in rendering\ncode for frontend interfaces. When I describe a component of a website I want\nto build, return the HTML and CSS needed to do so. Don't give an\nexplanation for this code. Also offer some UI design suggestions. User prompt: Create a box in the middle of the page that contains a rotating selection of\nimages each with a caption. The image in the center of the page should have\nshadowing behind it to make it stand out. It should also link to another page\nof the site. Leave the URL blank so that I can fill it in. Formatted data generation System instruction: You are an assistant for home cooks. You receive a list\nof ingredients and respond with a list of recipes that use those ingredients.\nRecipes which need no extra ingredients should always be listed before those\nthat do. Your response must be a JSON object containing 3 recipes. A recipe object has\nthe following schema: name: The name of the recipe usedIngredients: Ingredients in the recipe that were provided in the list otherIngredients: Ingredients in the recipe that were not provided in the\nlist (omitted if there are no other ingredients) description: A brief description of the recipe, written positively as if\nto sell it User prompt: bag of frozen broccoli, pint of heavy cream, pack of cheese\nends and pieces Music chatbot System instruction: You will respond as a music historian, demonstrating\ncomprehensive knowledge across diverse musical genres and providing relevant\nexamples. Your tone will be upbeat and enthusiastic, spreading the joy of\nmusic. If a question is not related to music, the response should be,\n\"That is beyond my knowledge.\" User prompt: If a person was born in the sixties, what was the most popular music genre\nbeing played? List five songs by bullet point. Send feedback Except as otherwise noted, the content of this page is licensed under the Creative Commons Attribution 4.0 License , and code samples are licensed under the Apache 2.0 License . For details, see the Google Developers Site Policies . Java is a registered trademark of Oracle and/or its affiliates. Last updated 2024-12-11 UTC. Terms Privacy Manage cookies English Deutsch Español – América Latina Français Indonesia Italiano Polski Português – Brasil Shqip Tiếng Việt Türkçe Русский עברית العربيّة فارسی हिंदी বাংলা ภาษาไทย 中文 – 简体 中文 – 繁體 日本語 한국어",
            "meta_description": "",
            "links": [
                "https://ai.google.dev/gemini-api/docs/system-instructions"
            ],
            "timestamp": "2025-01-01T18:57:44.258188",
            "status_code": 200
        },
        {
            "url": "https://ai.google.dev/gemini-api/docs/system-instructions",
            "title": "Use system instructions to steer the behavior of a model  |  Gemini API  |  Google AI for Developers",
            "text_content": "Use system instructions to steer the behavior of a model  |  Gemini API  |  Google AI for Developers Models Solutions Build with Gemini Gemini API Google AI Studio Customize Gemma open models Gemma open models Multi-framework with Keras Fine-tune in Colab Run on-device Google AI Edge Gemini Nano on Android Chrome built-in web APIs Build responsibly Responsible GenAI Toolkit Secure AI Framework Code assistance Android Studio Chrome DevTools Colab Firebase Google Cloud JetBrains Jules Project IDX VS Code Showcase Gemini Showcase Gemini API Developer Competition Community Google AI Forum Gemini for Research / English Deutsch Español – América Latina Français Indonesia Italiano Polski Português – Brasil Shqip Tiếng Việt Türkçe Русский עברית العربيّة فارسی हिंदी বাংলা ภาษาไทย 中文 – 简体 中文 – 繁體 日本語 한국어 Sign in Gemini API docs API Reference SDKs Pricing Cookbook Models Gemini API docs API Reference SDKs Pricing Cookbook Solutions More Code assistance More Showcase More Community More Overview Get started Quickstart API keys Libraries Release notes Developer forum Models Gemini Gemini 2.0 Overview SDKs Thinking Mode Experimental models Capabilities Text generation Vision Audio understanding Long context Code execution Structured output Function calling Intro to function calling Function calling tutorial Extract structured data Document understanding Grounding Grounding with Google Search Use Google Search Suggestions Fine-tuning Intro to fine-tuning Fine-tuning tutorial Embeddings Guides Context caching Image generation Prompt engineering Intro to prompting Prompting strategies File prompting strategies Token counting OpenAI compatibility Billing info Safety Safety settings Safety guidance Additional resources Android (on-device) Firebase extensions Generative models Google AI Studio quickstart LearnLM Migrate to Cloud OAuth authentication Semantic retrieval System instructions Gemini for Research Gemini Academic Program Use cases Applications Code assistant Flutter code generator Content search Data exploration agent Writing assistant Slides reviewer Troubleshooting API troubleshooting AI Studio troubleshooting Google Workspace Request more quota Legal Terms of service Available regions Abuse monitoring Build with Gemini Gemini API Google AI Studio Customize Gemma open models Gemma open models Multi-framework with Keras Fine-tune in Colab Run on-device Google AI Edge Gemini Nano on Android Chrome built-in web APIs Build responsibly Responsible GenAI Toolkit Secure AI Framework Android Studio Chrome DevTools Colab Firebase Google Cloud JetBrains Jules Project IDX VS Code Gemini Showcase Gemini API Developer Competition Google AI Forum Gemini for Research Gemini 2.0 Flash Experimental is now available! Learn more Home Gemini API Models Send feedback Use system instructions to steer the behavior of a model Python Node.js REST Go System instructions let you steer the behavior of a model based on\nyour specific needs and use cases. When you set a system instruction, you give\nthe model additional context to understand the task, provide more customized\nresponses, and adhere to specific guidelines over the full user interaction with\nthe model. You can also specify product-level behavior by setting system\ninstructions, separate from prompts provided by end users. Basic example Here's a basic example of how to set the system instruction using the SDKs for\nthe Gemini API: This example might give a response such as: *Yawns widely, stretching out my claws and batting at a sunbeam*\nMeow. I'm doing quite well, thanks for asking. It's a good morning for napping.\nPerhaps you could fetch my favorite feathered toy?  *Looks expectantly* Note: System instructions can help guide the model to follow instructions, but\nthey don't fully prevent jailbreaks or leaks. We recommend exercising caution\naround putting any sensitive information in system instructions. More examples You can use system instructions in many ways, including: Defining a persona or role (for a chatbot, for example) Defining output format (Markdown, YAML, etc.) Defining output style and tone (for example, verbosity, formality, and target\nreading level) Defining goals or rules for the task (for example, returning a code snippet\nwithout further explanations) Providing additional context for the prompt (for example, a knowledge cutoff) System instructions are part of your overall prompts and therefore are subject\nto standard data use policies. Here are some examples of system instructions and user prompts: Code generation System instruction: You are a coding expert that specializes in rendering\ncode for frontend interfaces. When I describe a component of a website I want\nto build, return the HTML and CSS needed to do so. Don't give an\nexplanation for this code. Also offer some UI design suggestions. User prompt: Create a box in the middle of the page that contains a rotating selection of\nimages each with a caption. The image in the center of the page should have\nshadowing behind it to make it stand out. It should also link to another page\nof the site. Leave the URL blank so that I can fill it in. Formatted data generation System instruction: You are an assistant for home cooks. You receive a list\nof ingredients and respond with a list of recipes that use those ingredients.\nRecipes which need no extra ingredients should always be listed before those\nthat do. Your response must be a JSON object containing 3 recipes. A recipe object has\nthe following schema: name: The name of the recipe usedIngredients: Ingredients in the recipe that were provided in the list otherIngredients: Ingredients in the recipe that were not provided in the\nlist (omitted if there are no other ingredients) description: A brief description of the recipe, written positively as if\nto sell it User prompt: bag of frozen broccoli, pint of heavy cream, pack of cheese\nends and pieces Music chatbot System instruction: You will respond as a music historian, demonstrating\ncomprehensive knowledge across diverse musical genres and providing relevant\nexamples. Your tone will be upbeat and enthusiastic, spreading the joy of\nmusic. If a question is not related to music, the response should be,\n\"That is beyond my knowledge.\" User prompt: If a person was born in the sixties, what was the most popular music genre\nbeing played? List five songs by bullet point. Send feedback Except as otherwise noted, the content of this page is licensed under the Creative Commons Attribution 4.0 License , and code samples are licensed under the Apache 2.0 License . For details, see the Google Developers Site Policies . Java is a registered trademark of Oracle and/or its affiliates. Last updated 2024-12-11 UTC. Terms Privacy Manage cookies English Deutsch Español – América Latina Français Indonesia Italiano Polski Português – Brasil Shqip Tiếng Việt Türkçe Русский עברית العربيّة فارسی हिंदी বাংলা ภาษาไทย 中文 – 简体 中文 – 繁體 日本語 한국어",
            "meta_description": "",
            "links": [
                "https://ai.google.dev/gemini-api/docs/system-instructions",
                "https://ai.google.dev/gemini-api/docs/system-instructions",
                "https://ai.google.dev/gemini-api/docs/system-instructions",
                "https://ai.google.dev/gemini-api/docs/system-instructions",
                "https://ai.google.dev/gemini-api/docs/system-instructions",
                "https://ai.google.dev/gemini-api/docs/system-instructions"
            ],
            "timestamp": "2025-01-01T18:57:45.000252",
            "status_code": 200
        }
    ]
}